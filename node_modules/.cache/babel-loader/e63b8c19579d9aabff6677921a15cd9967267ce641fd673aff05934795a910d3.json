{"ast":null,"code":"var _jsxFileName = \"/Users/raphaellevy/Desktop/chest-axel/src/components/ChessBoard.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChessBoard = ({\n  onSquareClick,\n  pieces = {},\n  selectedSquare = null,\n  className = \"\"\n}) => {\n  const files = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  const ranks = ['8', '7', '6', '5', '4', '3', '2', '1'];\n  const isLightSquare = (file, rank) => {\n    const fileIndex = files.indexOf(file);\n    const rankIndex = ranks.indexOf(rank);\n    return (fileIndex + rankIndex) % 2 === 0;\n  };\n  const getSquareColor = (file, rank) => {\n    const isLight = isLightSquare(file, rank);\n    return isLight ? 'bg-chess-light' : 'bg-chess-dark';\n  };\n  const isSelected = (file, rank) => {\n    return selectedSquare === `${file}${rank}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `inline-block ${className}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-8 border border-gray-300 overflow-hidden w-full max-w-[800px] aspect-square\",\n      children: ranks.map(rank => files.map(file => {\n        const square = `${file}${rank}`;\n        const piece = pieces[square];\n        const isLight = isLightSquare(file, rank);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `\n                  aspect-square\n                  ${getSquareColor(file, rank)}\n                  ${isSelected(file, rank) ? 'ring-1 ring-blue-500' : ''}\n                  flex items-center justify-center\n                  cursor-pointer\n                  transition-colors duration-200\n                  hover:bg-opacity-80\n                  ${isLight ? 'text-chess-dark' : 'text-chess-light'}\n                `,\n          onClick: () => onSquareClick && onSquareClick(file, rank, square),\n          children: piece && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-lg sm:text-xl md:text-2xl lg:text-3xl xl:text-4xl font-medium\",\n            children: piece\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this)\n        }, square, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 15\n        }, this);\n      }))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_c = ChessBoard;\nexport default ChessBoard;\nvar _c;\n$RefreshReg$(_c, \"ChessBoard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","ChessBoard","onSquareClick","pieces","selectedSquare","className","files","ranks","isLightSquare","file","rank","fileIndex","indexOf","rankIndex","getSquareColor","isLight","isSelected","children","map","square","piece","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/raphaellevy/Desktop/chest-axel/src/components/ChessBoard.js"],"sourcesContent":["import React from 'react';\n\nconst ChessBoard = ({ \n  onSquareClick, \n  pieces = {}, \n  selectedSquare = null,\n  className = \"\" \n}) => {\n  const files = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h'];\n  const ranks = ['8', '7', '6', '5', '4', '3', '2', '1'];\n\n  const isLightSquare = (file, rank) => {\n    const fileIndex = files.indexOf(file);\n    const rankIndex = ranks.indexOf(rank);\n    return (fileIndex + rankIndex) % 2 === 0;\n  };\n\n  const getSquareColor = (file, rank) => {\n    const isLight = isLightSquare(file, rank);\n    return isLight ? 'bg-chess-light' : 'bg-chess-dark';\n  };\n\n  const isSelected = (file, rank) => {\n    return selectedSquare === `${file}${rank}`;\n  };\n\n  return (\n    <div className={`inline-block ${className}`}>\n      <div className=\"grid grid-cols-8 border border-gray-300 overflow-hidden w-full max-w-[800px] aspect-square\">\n        {ranks.map((rank) =>\n          files.map((file) => {\n            const square = `${file}${rank}`;\n            const piece = pieces[square];\n            const isLight = isLightSquare(file, rank);\n            \n            return (\n              <div\n                key={square}\n                className={`\n                  aspect-square\n                  ${getSquareColor(file, rank)}\n                  ${isSelected(file, rank) ? 'ring-1 ring-blue-500' : ''}\n                  flex items-center justify-center\n                  cursor-pointer\n                  transition-colors duration-200\n                  hover:bg-opacity-80\n                  ${isLight ? 'text-chess-dark' : 'text-chess-light'}\n                `}\n                onClick={() => onSquareClick && onSquareClick(file, rank, square)}\n              >\n                {piece && (\n                  <span className=\"text-lg sm:text-xl md:text-2xl lg:text-3xl xl:text-4xl font-medium\">\n                    {piece}\n                  </span>\n                )}\n              </div>\n            );\n          })\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChessBoard; "],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,UAAU,GAAGA,CAAC;EAClBC,aAAa;EACbC,MAAM,GAAG,CAAC,CAAC;EACXC,cAAc,GAAG,IAAI;EACrBC,SAAS,GAAG;AACd,CAAC,KAAK;EACJ,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EACtD,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;EAEtD,MAAMC,aAAa,GAAGA,CAACC,IAAI,EAAEC,IAAI,KAAK;IACpC,MAAMC,SAAS,GAAGL,KAAK,CAACM,OAAO,CAACH,IAAI,CAAC;IACrC,MAAMI,SAAS,GAAGN,KAAK,CAACK,OAAO,CAACF,IAAI,CAAC;IACrC,OAAO,CAACC,SAAS,GAAGE,SAAS,IAAI,CAAC,KAAK,CAAC;EAC1C,CAAC;EAED,MAAMC,cAAc,GAAGA,CAACL,IAAI,EAAEC,IAAI,KAAK;IACrC,MAAMK,OAAO,GAAGP,aAAa,CAACC,IAAI,EAAEC,IAAI,CAAC;IACzC,OAAOK,OAAO,GAAG,gBAAgB,GAAG,eAAe;EACrD,CAAC;EAED,MAAMC,UAAU,GAAGA,CAACP,IAAI,EAAEC,IAAI,KAAK;IACjC,OAAON,cAAc,KAAK,GAAGK,IAAI,GAAGC,IAAI,EAAE;EAC5C,CAAC;EAED,oBACEV,OAAA;IAAKK,SAAS,EAAE,gBAAgBA,SAAS,EAAG;IAAAY,QAAA,eAC1CjB,OAAA;MAAKK,SAAS,EAAC,4FAA4F;MAAAY,QAAA,EACxGV,KAAK,CAACW,GAAG,CAAER,IAAI,IACdJ,KAAK,CAACY,GAAG,CAAET,IAAI,IAAK;QAClB,MAAMU,MAAM,GAAG,GAAGV,IAAI,GAAGC,IAAI,EAAE;QAC/B,MAAMU,KAAK,GAAGjB,MAAM,CAACgB,MAAM,CAAC;QAC5B,MAAMJ,OAAO,GAAGP,aAAa,CAACC,IAAI,EAAEC,IAAI,CAAC;QAEzC,oBACEV,OAAA;UAEEK,SAAS,EAAE;AAC3B;AACA,oBAAoBS,cAAc,CAACL,IAAI,EAAEC,IAAI,CAAC;AAC9C,oBAAoBM,UAAU,CAACP,IAAI,EAAEC,IAAI,CAAC,GAAG,sBAAsB,GAAG,EAAE;AACxE;AACA;AACA;AACA;AACA,oBAAoBK,OAAO,GAAG,iBAAiB,GAAG,kBAAkB;AACpE,iBAAkB;UACFM,OAAO,EAAEA,CAAA,KAAMnB,aAAa,IAAIA,aAAa,CAACO,IAAI,EAAEC,IAAI,EAAES,MAAM,CAAE;UAAAF,QAAA,EAEjEG,KAAK,iBACJpB,OAAA;YAAMK,SAAS,EAAC,oEAAoE;YAAAY,QAAA,EACjFG;UAAK;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACF;QACP,GAjBIN,MAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAkBR,CAAC;MAEV,CAAC,CACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACC,EAAA,GA5DIzB,UAAU;AA8DhB,eAAeA,UAAU;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}